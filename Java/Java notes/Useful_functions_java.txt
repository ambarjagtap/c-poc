1- 'String' to other types :
    - Double num=Double.parseDouble(str);   //String to Double
    - int num=Integer.parseInt(str);    //String to int
   
_________________________________________________________________________________________________________

2- String:
    - String temp="cadv";
    - temp.charAt(0)=='d';
    - str+="abcd";   //appending String to String
    - temp.charAt(0)==temp.charAt(2);
    - str.length();  // length of string
    - char arr[]=str.toCharArray();   // creating array of char from String
    - str1.equals(str2); // if equal or not
    - String res=new String(arrORbytes);  // typecasting from char array to String
    - int num=(int)str.charAt(i); // type cast ASCII to int
    - str.indexOf(char);   // returns index of char on a String 
    - str.concat("bjbjh");   // appending string literal
    - str.toUpperCase();  // changing all chars to upper case
    - str.substring(start_index,end_index);   //returns substring
    - String arr[]=str.split("char/symbol");      //returns an array of string separated by "char"
    - String str=Integer.toString(num);   //type-casting number to String 
      
   ------------------------------------StringBuilder----------------------------------------------
    - StringBuilder new=null;  // empty StringBuidler object
    - StringBuilder res=new StringBuilder(str);   //creating StringBuilder object using String
    - str.append('char');    // adding character to last end 
    - str.deleteCharAt(index_num);   // deleting character at index num
    - str.reverse();    //reverseing string
    - str.toString();  // changing to String 
      
_________________________________________________________________________________________________________

3- Set precision :
    - System.out.printf(String.format("%.2f",num));
    
_________________________________________________________________________________________________________

4- Array: 
    - arr.length   //length is not a member function, but instead a data member of class Array
    - Arrays.binarySearch(int_arr,int_key);   // returns index if found, else '-1'  //java.util.Arrays;
    - for(int i:arr)System.out.println(arr[i]);   // printing array using iterator
    - int mar[][]=new int[n][n];    //declaring matrix/2-D using array 
    - Arrays.sort(arr);   //by default sorting array in increasing order || inside 'java.util.Arrays'
_________________________________________________________________________________________________________
    
5- Functions regarding 'HashMap':
    - HashMap<Charter,Integer>map=new HashMap<Character,Integer>(size,loadfactor(0.5f);  //create a map
    - map.put(key,value);  // adding elements 
    - map.get(key);  // fetch value 
    - map.containsKey(key_name);  // finding if key is present 
    - map.size();   // outputs size of map 
    - map.remove(key);   // removing an element 
    - for(Map.Entry<type,type>it:name_of_map.entrySet())     // iterating each element of HashMap
          System.out.println(it.getKey()+" "+it.getValue());   // NOTE: include java.util.Map;
          
          
    /*------for iterators----------*/
    - it.getKey();   // get key associated to the index/iterator 
    - it.getValue();  // get value associated to the index/iterator
          
_______________________________________________________________________________________________________________

6- Functions regarding 'Math':
    - Math.pow(base,expo);   // return type is double  
    - Math.abs(num1-num2);    // returns absolute value
    - Math.ceil(num1);   // return type is double  
    - Math.min(num1,num2);  // returns minimum of num1,num2
    - Math.sqrt(num);    //returns square root of a number
________________________________________________________________________________________________________________

7- Functions regarding 'char':
    - char ch=inp.next().charAt(0);   // input character 
    - Character.isLowerCase(ch);   // returns 'true' if char is lower case, else 'false'  
    - Character.isUpperCase(ch);   // returns 'true' if char is upper case, else 'false'
    - Character.toLowerCase(ch);   // changing char to lower case 
    - Character.toUpperCase(ch);   // changing char to upper case
    - char ch='\0';    //intialising null character
    - String str=Character.toString(char);   //Character to String
    - String str=String.valueOf(char);     //Character to String 
    - 
    
   
________________________________________________________________________________________________________________________________________________

8. ArrayList : (import java.util.ArrayList;)
    
        - ArrayList<String>list_name=new ArrayList<>();   //initialising ArrayList of String
          ArrayList<Integer>list_name=new ArrayList<Integer>(n);  // declaring ArrayList of size 'n'
        - Collections.addAll(list_name,array_name);    // adding array to list
        - list_name.add(element);  // appending elements to List
        - list_name.size();  // returns size of list
        - list_name.get(index);  // accessing elements from list
        - list_name.set(index,val);   //declaring a new value to an index
        - ArrayList<Integer>ls=new ArrayList<Integer>(Arrays.asList(0,1,2,3));    //initialising an ArrayList  //inside java.util.Arrays;        
__________________________________________________________________________________________________________________________________________________

9. Collections class :
        - Collections.sort(ArrayList_name);   //sorts by default in increasing order  
        - Collections.addAll(list_name,array_name);  //adding array elements to ArrayList
            
___________________________________________________________________________________________________________________

10. Scanner class functions :
    - Scanner inp=new Scanner(System.in);
        inp.hasNextInt();        //returns 'true' if there is a int in input, else returns 'false'.
        inp.hasNextLine();       //returns 'true' if there is a nextLine in input, else returns 'false'.
